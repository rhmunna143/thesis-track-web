{
  "info": {
    "name": "ThesisTrack API Collection",
    "description": "Complete API collection for ThesisTrack - Academic Project Proposal & Book Review System",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Public Student Signup",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@university.edu\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "signup"]
            },
            "description": "Public registration endpoint for students. Creates a new student account."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@university.edu\",\n  \"password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/signup",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "signup"]
                }
              },
              "status": "Created",
              "code": 201,
              "header": [],
              "body": "{\n  \"id\": 1,\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@university.edu\",\n  \"role\": \"STUDENT\",\n  \"created_at\": \"2025-08-09T10:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('token', response.token);",
                  "    pm.environment.set('token', response.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"rhmunna19@gmail.com\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate user and get JWT token. Token is automatically set as collection variable."
          },
          "response": [
            {
              "name": "Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john.doe@university.edu\",\n  \"password\": \"password123\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [],
              "body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 1,\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@university.edu\",\n    \"role\": \"STUDENT\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Admin Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Dr. Jane Smith\",\n  \"email\": \"jane.smith@university.edu\",\n  \"password\": \"teacher123\",\n  \"role\": \"TEACHER\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Admin-only endpoint to create new users (TEACHER or STUDENT roles only)"
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/me",
              "host": ["{{baseUrl}}"],
              "path": ["me"]
            },
            "description": "Get current authenticated user profile"
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Get detailed current user profile with all fields"
          }
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe Updated\",\n  \"department\": \"Computer Science\",\n  \"bio\": \"Interested in AI and machine learning\",\n  \"expertise\": [\"JavaScript\", \"Python\", \"React\", \"Node.js\"],\n  \"profilePicture\": \"/uploads/images/profile-123.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Update current user profile information"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/1",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1"]
            },
            "description": "Get user profile by user ID"
          }
        },
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&limit=20&role=STUDENT&search=john",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "role",
                  "value": "STUDENT"
                },
                {
                  "key": "department",
                  "value": "Computer Science",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "john"
                }
              ]
            },
            "description": "Get paginated list of all users with filtering options (Admin only)"
          }
        },
        {
          "name": "Update User Role (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"TEACHER\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/1/role",
              "host": ["{{baseUrl}}"],
              "path": ["users", "1", "role"]
            },
            "description": "Update user role (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Proposals",
      "item": [
        {
          "name": "Get All Proposals",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/proposals",
              "host": ["{{baseUrl}}"],
              "path": ["proposals"]
            },
            "description": "Get proposals based on user role. Students see their own, Teachers see assigned ones, Admins see all."
          }
        },
        {
          "name": "Submit New Proposal (Student)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"AI-Based Recommendation System\",\n  \"abstract\": \"This project focuses on building a recommendation system using machine learning techniques to provide personalized suggestions for users based on their preferences and behavior patterns.\",\n  \"supervisorId\": 2,\n  \"documentUrl\": \"/uploads/documents/proposal-123.pdf\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/proposals",
              "host": ["{{baseUrl}}"],
              "path": ["proposals"]
            },
            "description": "Submit a new thesis proposal (Students only)"
          }
        },
        {
          "name": "Update Proposal Status (Teacher)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"APPROVED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/proposals/1/status",
              "host": ["{{baseUrl}}"],
              "path": ["proposals", "1", "status"]
            },
            "description": "Update proposal status. Valid statuses: PENDING, APPROVED, REJECTED, REVISION_REQUIRED"
          }
        },
        {
          "name": "Assign Supervisor (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"supervisorId\": 3\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/proposals/1/assign",
              "host": ["{{baseUrl}}"],
              "path": ["proposals", "1", "assign"]
            },
            "description": "Assign or reassign supervisor to a proposal (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Comments",
      "item": [
        {
          "name": "Add Comment to Proposal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"proposalId\": 1,\n  \"content\": \"The methodology section needs more clarification. Please provide more details about the data collection process and evaluation metrics.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["comments"]
            },
            "description": "Add a comment to a proposal (Teachers and Admins only)"
          }
        }
      ]
    },
    {
      "name": "Sessions",
      "item": [
        {
          "name": "Get Active Session",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/sessions/active",
              "host": ["{{baseUrl}}"],
              "path": ["sessions", "active"]
            },
            "description": "Get current active session (Public endpoint)"
          }
        },
        {
          "name": "Create New Session (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Fall 2025\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/sessions",
              "host": ["{{baseUrl}}"],
              "path": ["sessions"]
            },
            "description": "Create a new academic session (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Project Books",
      "item": [
        {
          "name": "Submit Project Book (Student)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"proposalId\": 1,\n  \"documentUrl\": \"/uploads/documents/project-book-123.pdf\",\n  \"presentationUrl\": \"/uploads/documents/presentation-123.pdf\",\n  \"sourceCodeUrl\": \"https://github.com/user/project\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/project-books",
              "host": ["{{baseUrl}}"],
              "path": ["project-books"]
            },
            "description": "Submit a project book for an approved proposal (Students only)"
          }
        },
        {
          "name": "Get All Project Books",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/project-books",
              "host": ["{{baseUrl}}"],
              "path": ["project-books"]
            },
            "description": "Get project books based on user role"
          }
        },
        {
          "name": "Get Project Book by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/project-books/1",
              "host": ["{{baseUrl}}"],
              "path": ["project-books", "1"]
            },
            "description": "Get project book details by ID"
          }
        },
        {
          "name": "Review Project Book",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"APPROVED\",\n  \"reviewScore\": 85,\n  \"reviewComments\": \"Excellent work with comprehensive documentation. Minor improvements needed in the testing section.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/project-books/1/review",
              "host": ["{{baseUrl}}"],
              "path": ["project-books", "1", "review"]
            },
            "description": "Review a project book (Teachers and Admins only)"
          }
        }
      ]
    },
    {
      "name": "File Uploads",
      "item": [
        {
          "name": "Upload Document (PDF)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/upload/document",
              "host": ["{{baseUrl}}"],
              "path": ["upload", "document"]
            },
            "description": "Upload a PDF document. Returns file URL for use in proposals or project books."
          }
        },
        {
          "name": "Upload Image",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "image",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/upload/image",
              "host": ["{{baseUrl}}"],
              "path": ["upload", "image"]
            },
            "description": "Upload an image file"
          }
        },
        {
          "name": "Upload Profile Picture",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "profile",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/upload/profile",
              "host": ["{{baseUrl}}"],
              "path": ["upload", "profile"]
            },
            "description": "Upload profile picture and automatically update user's profile"
          }
        },
        {
          "name": "Delete File",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/upload/filename.pdf?type=document",
              "host": ["{{baseUrl}}"],
              "path": ["upload", "filename.pdf"],
              "query": [
                {
                  "key": "type",
                  "value": "document"
                }
              ]
            },
            "description": "Delete an uploaded file. Type can be 'document' or 'image'"
          }
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Get User Notifications",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications?page=1&limit=20&unreadOnly=false",
              "host": ["{{baseUrl}}"],
              "path": ["notifications"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "unreadOnly",
                  "value": "false"
                }
              ]
            },
            "description": "Get user notifications with pagination. Set unreadOnly=true to get only unread notifications."
          }
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/1/read",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "1", "read"]
            },
            "description": "Mark a specific notification as read"
          }
        },
        {
          "name": "Mark All Notifications as Read",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/mark-all-read",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "mark-all-read"]
            },
            "description": "Mark all user notifications as read"
          }
        }
      ]
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Get Dashboard Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "dashboard"]
            },
            "description": "Get role-based dashboard data. Response varies by user role (Student/Teacher/Admin)."
          }
        },
        {
          "name": "Get Proposal Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/proposals?groupBy=status&startDate=2025-01-01&endDate=2025-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "proposals"],
              "query": [
                {
                  "key": "groupBy",
                  "value": "status"
                },
                {
                  "key": "startDate",
                  "value": "2025-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2025-12-31"
                }
              ]
            },
            "description": "Get proposal statistics grouped by various fields (Teachers and Admins only)"
          }
        },
        {
          "name": "Get User Analytics (Admin)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/users",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "users"]
            },
            "description": "Get user statistics including role distribution and registration trends (Admin only)"
          }
        }
      ]
    },
    {
      "name": "System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/",
              "host": ["{{baseUrl}}"],
              "path": [""]
            },
            "description": "Basic health check endpoint to verify API is running"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Add timestamp to requests",
          "pm.request.headers.add({",
          "    key: 'X-Request-Time',",
          "    value: new Date().toISOString()",
          "});"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test to check response time",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "// Global test to check for successful responses",
          "pm.test('Status code is successful', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});"
        ]
      }
    }
  ]
}